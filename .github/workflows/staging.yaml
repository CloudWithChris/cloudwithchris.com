name: Staging (Dev)
on: 
  push:
      branches:
        - dev
jobs:
  compressor:
    name: calibreapp/image-actions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Compress Images
        id: calibre
        uses: calibreapp/image-actions@main
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          compressOnly: true
      - name: Create New Pull Request If Needed
        if: steps.calibre.outputs.markdown != ''
        uses: peter-evans/create-pull-request@v3
        with:
          title: Compressed Images
          branch-suffix: timestamp
          commit-message: Compressed Images
          body: ${{ steps.calibre.outputs.markdown }}
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          FILTER_REGEX_INCLUDE: .*content/.*
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JSCPD: false
  build:
    needs: [lint, compressor]
    runs-on: ubuntu-latest
    steps:            
    - uses: actions/checkout@v2
    - name: "Install Node Dependencies"
      run: npm ci    
    - name: "Setup Hugo on Runner"
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '0.80.0'
        extended: true
    - name: "Replace tokens in Configuration"
      uses: cschleiden/replace-tokens@v1.0
      with:
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        files: '["config.yaml"]'
      env:
        hostname: 'https://staging.cloudwithchris.com/'
    - name: "Build and Minify Hugo Contents"
      run: hugo --minify    
    - name: "Upload Generated Static Content as Website Artifact"
      uses: actions/upload-artifact@v1
      with:
        name: website
        path: ${{ github.workspace }}/public
  publish-azure:    
    environment:
      name: staging.azure
      url: https://staging.cloudwithchris.com  
    runs-on: ubuntu-latest
    needs: build
    steps:    
    - name: "Download Website Artifact"
      uses: actions/download-artifact@v1
      with:
        name: website
    - name: "Login to Azure"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}     
    - name: "Upload Static Content to Storage"
      uses: azure/CLI@v1
      with:
        azcliversion: 2.20.0
        inlineScript: |
          az storage blob upload-batch --account-name cloudwithchrisstaging -d '$web' -s website --auth-mode login
    - name: "Purge CDN"
      uses: azure/CLI@v1
      with:
        azcliversion: 2.20.0
        inlineScript: | 
          az cdn endpoint purge --content-paths  "/*" --profile-name "cloudwithchris" --name "cloudwithchris-staging" --resource-group "cloudwithchris"
  publish-gcp:    
    environment:
      name: staging.gcp
    runs-on: ubuntu-latest
    needs: build
    steps:    
    - name: "Download Website Artifact"
      uses: actions/download-artifact@v1
      with:
        name: website
    - name: "Authenticate Google SDK with Credentials"
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - name: "Upload Static Content to Google Storage"
      run: gsutil cp -r website/** gs://gcp.cloudwithchris.com
  publish-aws: 
    environment:
      name: staging.aws   
    runs-on: ubuntu-latest
    needs: build
    steps:    
    - name: "Download Website Artifact"
      uses: actions/download-artifact@v1
      with:
        name: website
    - name: "Authenticate with AWS Credentials"
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1    
    - name: "Upload Static Content to Staging S3 Bucket"
      run: |
        aws s3 sync ./website s3://cloudwithchris
